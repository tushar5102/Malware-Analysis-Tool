import subprocess

# Command to list all PowerShell processes and their parent process IDs
ps_command = 'Get-WmiObject Win32_Process -Filter "name=\'powershell.exe\'" | Select-Object ProcessId, ParentProcessId'

# Run the command and capture the output
ps_output = subprocess.check_output(['powershell.exe', '-Command', ps_command]).decode()

# Split the output into lines and extract process ID and parent process ID for each process
ps_processes = [line.split() for line in ps_output.strip().split('\n')]
ps_processes = [(int(pid), int(ppid)) for pid, ppid in ps_processes]

# Check if any PowerShell process is being executed remotely
for pid, ppid in ps_processes:
    if ppid != 0:
        print(f"Process {pid} is being executed remotely by parent process {ppid}. Killing process...")
        subprocess.call(['taskkill', '/F', '/T', '/PID', str(pid)])
